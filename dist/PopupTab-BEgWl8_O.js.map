{"version":3,"file":"PopupTab-BEgWl8_O.js","sources":["../node_modules/lucide-react/dist/esm/icons/refresh-cw.js","../src/features/quote-generator/components/PopupTab.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.516.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\", key: \"v9h5vc\" }],\n  [\"path\", { d: \"M21 3v5h-5\", key: \"1q7to0\" }],\n  [\"path\", { d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\", key: \"3uifl3\" }],\n  [\"path\", { d: \"M8 16H3v5\", key: \"1cv678\" }]\n];\nconst RefreshCw = createLucideIcon(\"refresh-cw\", __iconNode);\n\nexport { __iconNode, RefreshCw as default };\n//# sourceMappingURL=refresh-cw.js.map\n","/**\n * Quote Generator Popup Tab - Simple Demo\n * @module @voilajsx/comet\n * @file src/features/quote-generator/components/PopupTab.tsx\n */\n\nimport React, { useState } from 'react';\nimport { TabsContent } from '@voilajsx/uikit/tabs';\nimport { Card, CardContent, CardHeader, CardTitle } from '@voilajsx/uikit/card';\nimport { Button } from '@voilajsx/uikit/button';\nimport { Alert, AlertDescription } from '@voilajsx/uikit/alert';\nimport { Separator } from '@voilajsx/uikit/separator';\nimport { Badge } from '@voilajsx/uikit/badge';\nimport { Quote, Loader2, CheckCircle, AlertCircle, RefreshCw } from 'lucide-react';\nimport { useQuoteGenerator } from '../hooks/useQuoteGenerator';\n\nexport default function QuoteGeneratorTab({ value, currentTab }) {\n  const {\n    currentQuote,\n    settings,\n    loading,\n    getQuote\n  } = useQuoteGenerator();\n\n  const [feedback, setFeedback] = useState(null);\n\n  const handleGetQuote = async () => {\n    const result = await getQuote();\n    \n    if (result.success) {\n      setFeedback({\n        type: 'success',\n        message: result.data.source === 'api' ? 'Fresh quote!' : 'Offline quote'\n      });\n    } else {\n      setFeedback({ type: 'error', message: result.error });\n    }\n    \n    setTimeout(() => setFeedback(null), 3000);\n  };\n\n  const getConfig = () => {\n    return settings.quoteType === 'motivational' \n      ? { title: 'Motivational Quote', desc: 'Inspiring messages', buttonText: 'Get Motivation' }\n      : { title: 'General Quote', desc: 'Wisdom and advice', buttonText: 'Get Quote' };\n  };\n\n  const config = getConfig();\n\n  return (\n    <TabsContent value={value} className=\"mt-0\">\n      <Card>\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-base flex items-center gap-2\">\n            <Quote className=\"w-4 h-4\" />\n            {config.title}\n          </CardTitle>\n          <p className=\"text-xs text-muted-foreground\">{config.desc}</p>\n        </CardHeader>\n        \n        <CardContent className=\"space-y-4\">\n          \n          {/* Get Quote Button */}\n          <Button\n            onClick={handleGetQuote}\n            disabled={loading}\n            className=\"w-full\"\n          >\n            {loading ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Getting Quote...\n              </>\n            ) : (\n              <>\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\n                {config.buttonText}\n              </>\n            )}\n          </Button>\n\n          {/* Feedback */}\n          {feedback && (\n            <Alert variant={feedback.type === 'success' ? 'default' : 'destructive'}>\n              {feedback.type === 'success' ? (\n                <CheckCircle className=\"h-4 w-4\" />\n              ) : (\n                <AlertCircle className=\"h-4 w-4\" />\n              )}\n              <AlertDescription class=\"pt-1\">{feedback.message}</AlertDescription>\n            </Alert>\n          )}\n\n          {/* Quote Display */}\n          {currentQuote && (\n            <div className=\"space-y-3\">\n              <Separator />\n              \n              <div className=\"bg-muted/50 p-4 rounded border\">\n                <div className=\"text-sm italic mb-3 leading-relaxed\">\n                  \"{currentQuote.text}\"\n                </div>\n                \n                <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n                  <span>â€” {currentQuote.author}</span>\n                  <div className=\"flex gap-2\">\n                    <Badge variant=\"outline\">\n                      {currentQuote.category}\n                    </Badge>\n                    <Badge variant={currentQuote.source === 'api' ? 'default' : 'secondary'}>\n                      {currentQuote.source === 'api' ? 'Live' : 'Offline'}\n                    </Badge>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Helper text */}\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground\">\n              Change quote type in extension settings\n            </p>\n          </div>\n\n        </CardContent>\n      </Card>\n    </TabsContent>\n  );\n}"],"names":["__iconNode","RefreshCw","createLucideIcon","QuoteGeneratorTab","value","currentTab","currentQuote","settings","loading","getQuote","useQuoteGenerator","feedback","setFeedback","useState","handleGetQuote","result","config","TabsContent","Card","jsxs","CardHeader","CardTitle","jsx","Quote","CardContent","Button","Fragment","Loader2","Alert","CheckCircle","AlertCircle","AlertDescription","Separator","Badge"],"mappings":"sdAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAAa,CACjB,CAAC,OAAQ,CAAE,EAAG,qDAAsD,IAAK,QAAQ,CAAE,EACnF,CAAC,OAAQ,CAAE,EAAG,aAAc,IAAK,QAAQ,CAAE,EAC3C,CAAC,OAAQ,CAAE,EAAG,sDAAuD,IAAK,QAAQ,CAAE,EACpF,CAAC,OAAQ,CAAE,EAAG,YAAa,IAAK,QAAU,CAAA,CAC5C,EACMC,EAAYC,EAAiB,aAAcF,CAAU,ECC3D,SAAwBG,EAAkB,CAAE,MAAAC,EAAO,WAAAC,GAAc,CACzD,KAAA,CACJ,aAAAC,EACA,SAAAC,EACA,QAAAC,EACA,SAAAC,GACEC,EAAkB,EAEhB,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAS,IAAI,EAEvCC,EAAiB,SAAY,CAC3B,MAAAC,EAAS,MAAMN,EAAS,EAE1BM,EAAO,QACGH,EAAA,CACV,KAAM,UACN,QAASG,EAAO,KAAK,SAAW,MAAQ,eAAiB,eAAA,CAC1D,EAEDH,EAAY,CAAE,KAAM,QAAS,QAASG,EAAO,MAAO,EAGtD,WAAW,IAAMH,EAAY,IAAI,EAAG,GAAI,CAC1C,EAQMI,EALGT,EAAS,YAAc,eAC1B,CAAE,MAAO,qBAAsB,KAAM,qBAAsB,WAAY,gBAAA,EACvE,CAAE,MAAO,gBAAiB,KAAM,oBAAqB,WAAY,WAAY,EAKnF,aACGU,EAAY,CAAA,MAAAb,EAAc,UAAU,OACnC,gBAACc,EACC,CAAA,SAAA,CAACC,EAAAA,KAAAC,EAAA,CAAW,UAAU,OACpB,SAAA,CAACD,EAAAA,KAAAE,EAAA,CAAU,UAAU,oCACnB,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAM,UAAU,SAAU,CAAA,EAC1BP,EAAO,KAAA,EACV,EACCM,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAiC,WAAO,IAAK,CAAA,CAAA,EAC5D,EAEAH,EAAAA,KAACK,EAAY,CAAA,UAAU,YAGrB,SAAA,CAAAF,EAAA,IAACG,EAAA,CACC,QAASX,EACT,SAAUN,EACV,UAAU,SAET,WAEGW,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAACJ,EAAAA,IAAAK,EAAA,CAAQ,UAAU,2BAA4B,CAAA,EAAE,kBAAA,CAAA,CAEnD,EAGER,EAAAA,KAAAO,EAAA,SAAA,CAAA,SAAA,CAACJ,EAAAA,IAAArB,EAAA,CAAU,UAAU,cAAe,CAAA,EACnCe,EAAO,UAAA,CACV,CAAA,CAAA,CAEJ,EAGCL,UACEiB,EAAM,CAAA,QAASjB,EAAS,OAAS,UAAY,UAAY,cACvD,SAAA,CAASA,EAAA,OAAS,UACjBW,EAAAA,IAACO,EAAY,CAAA,UAAU,SAAU,CAAA,EAEjCP,EAAAA,IAACQ,EAAY,CAAA,UAAU,SAAU,CAAA,EAElCR,EAAA,IAAAS,EAAA,CAAiB,MAAM,OAAQ,WAAS,OAAQ,CAAA,CAAA,EACnD,EAIDzB,GACCa,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAG,EAAA,IAACU,EAAU,EAAA,EAEXb,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sCAAsC,SAAA,CAAA,IACjDb,EAAa,KAAK,GAAA,EACtB,EAEAa,EAAAA,KAAC,MAAI,CAAA,UAAU,kEACb,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,KAAGb,EAAa,MAAA,EAAO,EAC7Ba,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAG,EAAA,IAACW,EAAM,CAAA,QAAQ,UACZ,SAAA3B,EAAa,SAChB,EACCgB,EAAA,IAAAW,EAAA,CAAM,QAAS3B,EAAa,SAAW,MAAQ,UAAY,YACzD,SAAaA,EAAA,SAAW,MAAQ,OAAS,SAC5C,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAIFgB,EAAAA,IAAC,OAAI,UAAU,cACb,eAAC,IAAE,CAAA,UAAU,gCAAgC,SAAA,yCAE7C,CAAA,CACF,CAAA,CAAA,CAEF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ","x_google_ignoreList":[0]}