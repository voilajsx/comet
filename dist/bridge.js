(function(){"use strict";function f(){return{wordCount:(document.body.innerText||"").trim().split(/\s+/).filter(t=>t.length>0).length,pageSize:m(),title:document.title,url:window.location.href}}function m(){const s=document.documentElement.outerHTML,e=document.body.innerText||"";return{htmlBytes:new Blob([s]).size,textBytes:new Blob([e]).size,formatted:M(new Blob([s]).size)}}function M(s){if(s===0)return"0 Bytes";const e=1024,t=["Bytes","KB","MB"],r=Math.floor(Math.log(s)/Math.log(e));return parseFloat((s/Math.pow(e,r)).toFixed(1))+" "+t[r]}const D={name:"pageAnalyzer",handlers:{getPageData:()=>f(),getPageSize:()=>m()},mainAction:()=>f(),init:()=>{console.log("[Page Analyzer] Module initialized")}},d={async fetch(s,e={}){try{const t=await new Promise((r,a)=>{chrome.runtime.sendMessage({type:"api.fetch",data:{url:s,method:e.method||"GET",headers:e.headers||{},body:e.body||null,timeout:e.timeout||3e4}},o=>{chrome.runtime.lastError?a(new Error(chrome.runtime.lastError.message)):r(o)})});return{ok:t.success,status:t.status,json:()=>Promise.resolve(t.data),data:t.data,error:t.error}}catch(t){return{ok:!1,status:0,error:t.message,json:()=>Promise.reject(t)}}},async get(s,e={}){return this.fetch(s,{method:"GET",headers:e})},async post(s,e=null,t={}){return this.fetch(s,{method:"POST",body:e,headers:t})},async put(s,e=null,t={}){return this.fetch(s,{method:"PUT",body:e,headers:t})},async patch(s,e=null,t={}){return this.fetch(s,{method:"PATCH",body:e,headers:t})},async delete(s,e={}){return this.fetch(s,{method:"DELETE",headers:e})}},C={name:"quoteGenerator",handlers:{getQuote:()=>h(),getMotivationalQuote:()=>B()},mainAction:()=>h(),init:()=>{console.log("[Quote Generator] Module initialized")}};async function h(){const s=[{url:"https://api.adviceslip.com/advice",transform:e=>({text:e.data.data.slip.advice,author:"Anonymous",tags:["advice"]})},{url:"https://api.kanye.rest/",transform:e=>({text:e.data.data.quote,author:"Kanye West",tags:["inspiration"]})}];for(const e of s)try{console.log(`[Quote Generator] Trying ${e.url}`);const t=await d.get(e.url);if(console.log("[Quote Generator] Full response:",JSON.stringify(t,null,2)),t.ok&&t.data&&t.data.data){const r=e.transform(t);return console.log("[Quote Generator] Transformed quote:",r),{success:!0,quote:{text:r.text,author:r.author,length:r.text.length,tags:r.tags},timestamp:Date.now()}}}catch(t){console.warn("[Quote Generator] API failed:",t);continue}return{success:!1,error:"APIs unavailable",fallbackQuote:T()}}async function B(){const s=await h();return s.success?(s.quote.category="motivational",s):{success:!1,error:s.error,fallbackQuote:E()}}function T(){const s=[{text:"The only way to do great work is to love what you do.",author:"Steve Jobs"},{text:"Life is what happens while you're busy making other plans.",author:"John Lennon"},{text:"The future belongs to those who believe in their dreams.",author:"Eleanor Roosevelt"}];return{...s[Math.floor(Math.random()*s.length)],source:"fallback",tags:["wisdom"]}}function E(){const s=[{text:"Success is courage to continue despite failures.",author:"Winston Churchill"},{text:"The only impossible journey is the one you never begin.",author:"Tony Robbins"},{text:"Don't watch the clock; keep going like it does.",author:"Sam Levenson"}];return{...s[Math.floor(Math.random()*s.length)],category:"motivational",source:"fallback",tags:["motivation"]}}const F="modulepreload",G=function(s){return"/"+s},J={},L=function(e,t,r){let a=Promise.resolve();function o(i){const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=i,window.dispatchEvent(n),!n.defaultPrevented)throw i}return a.then(i=>{for(const n of i||[])n.status==="rejected"&&o(n.reason);return e().catch(o)})},U=(()=>{if(typeof browser<"u")return browser;if(typeof chrome<"u")return chrome;throw new Error("No browser extension API available")})();class P{constructor(){this.api=U,this.syncQuota=this.api.storage.sync.QUOTA_BYTES||102400,this.localQuota=this.api.storage.local.QUOTA_BYTES||10485760,this.syncItemQuota=this.api.storage.sync.QUOTA_BYTES_PER_ITEM||8192,this.defaults={},this.defaultsLoaded=!1,this.isInitialized=!1,this.initialize()}async initialize(){if(!this.isInitialized)try{await this.loadDefaults(),await this.initializeDefaults(),this.isInitialized=!0,console.log("[Comet Storage] Initialized with defaults")}catch(e){console.warn("[Comet Storage] Initialization failed, continuing without defaults:",e),this.defaults={},this.defaultsLoaded=!0,this.isInitialized=!0}}async loadDefaults(){if(!this.defaultsLoaded)try{const e=await L(()=>Promise.resolve().then(()=>N),void 0);this.defaults=e.default||{},this.defaultsLoaded=!0,console.log("[Comet Storage] Loaded defaults from defaults.json")}catch{console.log("[Comet Storage] No defaults.json found, using empty defaults"),this.defaults={},this.defaultsLoaded=!0}}async initializeDefaults(){try{if((await this.api.storage.local.get("_defaultsInitialized"))._defaultsInitialized)return;Object.keys(this.defaults).length>0&&(await this.setDefaults(this.defaults),console.log("[Comet Storage] Initialized storage with defaults")),await this.api.storage.local.set({_defaultsInitialized:!0})}catch(e){console.warn("[Comet Storage] Failed to initialize defaults:",e)}}async setDefaults(e,t=""){for(const[r,a]of Object.entries(e)){const o=t?`${t}.${r}`:r;a&&typeof a=="object"&&!Array.isArray(a)?await this.setDefaults(a,o):await this.getRaw(o)===void 0&&await this.setRaw(o,a)}}async get(e=null,t=void 0,r="auto"){try{if(await this.initialize(),typeof e=="string"){const o=await this.getRaw(e,r);if(o!==void 0)return o;const i=this.getDefaultByPath(e);return i!==void 0?i:t}if(Array.isArray(e)){const o={};for(const i of e)o[i]=await this.get(i,void 0,r);return o}if(e===null){const i=await this.getStorageArea(r,"read").get(null);return this.mergeWithDefaults(i)}const a={};for(const o of Object.keys(e))a[o]=await this.get(o,e[o],r);return a}catch(a){throw console.error("[Comet Storage] Get operation failed:",a),new u("Failed to read from storage",a)}}async set(e,t=void 0,r="auto"){try{if(await this.initialize(),typeof e=="string")return await this.setRaw(e,t,r);const a=[];for(const[o,i]of Object.entries(e))a.push(await this.setRaw(o,i,r));return a.every(o=>o===!0)}catch(a){throw console.error("[Comet Storage] Set operation failed:",a),new u("Failed to write to storage",a)}}async remove(e,t="auto"){try{const r=this.getStorageArea(t,"write");return typeof e=="string"?await r.remove(e):await r.remove(e),!0}catch(r){throw console.error("[Comet Storage] Remove operation failed:",r),new u("Failed to remove from storage",r)}}async clear(e="both"){try{return e==="both"?await Promise.all([this.api.storage.sync.clear(),this.api.storage.local.clear()]):await this.getStorageArea(e,"write").clear(),!0}catch(t){throw console.error("[Comet Storage] Clear operation failed:",t),new u("Failed to clear storage",t)}}async has(e,t="auto"){try{return await this.get(e,void 0,t)!==void 0}catch{return!1}}async getUsage(e="both"){try{const t={};if(e==="both"||e==="sync"){const r=await this.api.storage.sync.getBytesInUse();t.sync={used:r,total:this.syncQuota,percentage:Math.round(r/this.syncQuota*100),available:this.syncQuota-r}}if(e==="both"||e==="local"){const r=await this.api.storage.local.getBytesInUse();t.local={used:r,total:this.localQuota,percentage:Math.round(r/this.localQuota*100),available:this.localQuota-r}}return t}catch(t){return console.error("[Comet Storage] Usage check failed:",t),{sync:{used:0,total:0,percentage:0,available:0}}}}onChange(e){const t=(r,a)=>{e(r,a)};return this.api.storage.onChanged.addListener(t),()=>{this.api.storage.onChanged.removeListener(t)}}async resetToDefaults(){try{return await this.clear(),await this.api.storage.local.remove("_defaultsInitialized"),await this.initializeDefaults(),console.log("[Comet Storage] Reset to defaults"),!0}catch(e){return console.error("[Comet Storage] Reset failed:",e),!1}}getDefaults(){return JSON.parse(JSON.stringify(this.defaults))}async getRaw(e,t="auto"){return(await this.getStorageArea(t,"read").get(e))[e]}async setRaw(e,t,r="auto"){const a={[e]:t},o=this.getStorageArea(r,"write",a);return this.validateDataSize(a,o),await o.set(a),!0}getDefaultByPath(e){return e.split(".").reduce((t,r)=>t?.[r],this.defaults)}mergeWithDefaults(e){const t=JSON.parse(JSON.stringify(this.defaults));for(const[r,a]of Object.entries(e))r!=="_defaultsInitialized"&&this.setByPath(t,r,a);return t}setByPath(e,t,r){const a=t.split("."),o=a.pop(),i=a.reduce((n,c)=>(c in n||(n[c]={}),n[c]),e);i[o]=r}getStorageArea(e,t,r=null){if(e==="sync")return this.api.storage.sync;if(e==="local")return this.api.storage.local;if(e==="auto"){if(t==="read")return this.api.storage.sync;if(r)return this.calculateDataSize(r)>this.syncItemQuota?this.api.storage.local:this.api.storage.sync}return this.api.storage.sync}calculateDataSize(e){try{return new Blob([JSON.stringify(e)]).size}catch{return JSON.stringify(e).length}}validateDataSize(e,t){const r=this.calculateDataSize(e);if(t===this.api.storage.sync){for(const[o,i]of Object.entries(e)){const n=this.calculateDataSize({[o]:i});if(n>this.syncItemQuota)throw new u(`Item "${o}" exceeds sync storage item limit (${n} > ${this.syncItemQuota} bytes)`)}if(r>this.syncQuota)throw new u(`Data exceeds sync storage quota (${r} > ${this.syncQuota} bytes)`)}else if(r>this.localQuota)throw new u(`Data exceeds local storage quota (${r} > ${this.localQuota} bytes)`)}}class u extends Error{constructor(e,t){super(e),this.name="CometStorageError",this.originalError=t}}const l=new P,I={name:"userAuth",handlers:{login:s=>x(s),logout:()=>Q(),getProfile:()=>$(),getAuthStatus:s=>y(s)},mainAction:s=>y(s),init:()=>{console.log("[User Auth] Module initialized with 7-day sessions")}};async function x(s){try{const{email:e,password:t}=s||{};if(!e||!t)return{success:!1,error:"Email and password required"};console.log("[User Auth] Attempting login with:",{email:e});const r=await d.post("https://reqres.in/api/login",{email:e,password:t},{"x-api-key":"reqres-free-v1"});return console.log("[User Auth] Full response:",JSON.stringify(r,null,2)),r.ok&&r.data&&r.data.data&&r.data.data.token?(await O(r.data.data.token),{success:!0,message:"Login successful",user:{email:e,token:r.data.data.token,loginTime:Date.now()}}):{success:!1,error:r.data?.data?.error||r.data?.error||r.error||`HTTP ${r.data?.status}`}}catch(e){return console.error("[User Auth] Login failed:",e),{success:!1,error:"Login request failed",details:e.message}}}async function Q(){try{return await l.remove(["auth.token","auth.timestamp","auth.userData","auth.userCacheTime","auth.userEmail"]),console.log("[User Auth] User logged out successfully"),{success:!0,message:"Logged out successfully",timestamp:Date.now()}}catch(s){return console.error("[User Auth] Logout failed:",s),{success:!1,error:"Logout failed",details:s.message}}}async function $(){try{const s=await w();if(!s)return{success:!1,error:"No authentication token found",needsLogin:!0};const e=await q();if(e)return{success:!0,profile:e};const t=await d.get("https://reqres.in/api/users/2",{Authorization:`Bearer ${s}`,"x-api-key":"reqres-free-v1"});if(t.ok&&t.data&&t.data.data){const r=t.data.data,a={id:r.id,email:r.email,firstName:r.first_name,lastName:r.last_name,name:`${r.first_name} ${r.last_name}`,avatar:r.avatar,lastAccess:Date.now()};return await _(a),{success:!0,profile:a}}else return{success:!1,error:"Failed to fetch profile",needsLogin:!0}}catch(s){return console.error("[User Auth] Profile fetch failed:",s),{success:!1,error:"Profile request failed",details:s.message}}}async function y(s={}){try{const e=s.sessionDays||await l.get("auth.sessionDays",7);return await w(e)?{success:!0,authenticated:!0,hasToken:!0,message:"User is authenticated",sessionDays:e,timestamp:Date.now()}:{success:!0,authenticated:!1,message:"No valid token found",sessionDays:e,timestamp:Date.now()}}catch(e){return console.error("[User Auth] Auth status check failed:",e),{success:!1,authenticated:!1,error:e.message}}}async function O(s){try{await l.set({"auth.token":s,"auth.timestamp":Date.now()}),console.log("[User Auth] Token stored successfully")}catch(e){console.error("[User Auth] Failed to store token:",e)}}async function w(s=7){try{const e=await l.get("auth.token"),t=await l.get("auth.timestamp");if(!e||!t)return null;const r=Date.now()-t,a=s*24*60*60*1e3;return r<a?e:(console.log(`[User Auth] Token expired after ${s} days, removing`),await l.remove(["auth.token","auth.timestamp","auth.userData","auth.userCacheTime","auth.userEmail"]),null)}catch(e){return console.error("[User Auth] Failed to get token:",e),null}}async function _(s){try{await l.set({"auth.userData":s,"auth.userCacheTime":Date.now()})}catch(e){console.error("[User Auth] Failed to cache user data:",e)}}async function q(){try{const s=await l.get("auth.userData"),e=await l.get("auth.userCacheTime");if(!s||!e)return null;const t=Date.now()-e,r=60*60*1e3;return t<r?s:null}catch(s){return console.error("[User Auth] Failed to get cached user data:",s),null}}const p=[D,C,I];class H{constructor(){this.isInitialized=!1,this.modules=new Map,this.messageHandlers=new Map,this.moduleRegistry=new Map,this.moduleLoadStrategy="static-imports",this.initialize()}async initialize(){if(!this.isInitialized){console.log("[Comet Bridge] Universal bridge loading on:",window.location.href);try{this.setupMessageHandling(),this.registerCoreHandlers(),this.loadStaticModules(),this.notifyReady(),this.isInitialized=!0,console.log(`[Comet Bridge] Initialized with ${this.modules.size} modules:`,Array.from(this.modules.keys()))}catch(e){console.error("[Comet Bridge] Initialization error:",e),this.isInitialized=!0}}}setupMessageHandling(){try{chrome.runtime.onMessage.addListener((e,t,r)=>(this.handleMessage(e,t,r),!0))}catch(e){console.warn("[Comet Bridge] Message handling setup failed:",e)}}registerCoreHandlers(){this.registerHandler("ping",()=>({success:!0,ready:!0,url:window.location.href,timestamp:Date.now(),modules:Array.from(this.modules.keys()),moduleCount:this.modules.size,loadStrategy:this.moduleLoadStrategy})),this.registerHandler("getPageInfo",()=>({url:window.location.href,title:document.title,hostname:window.location.hostname,timestamp:Date.now()})),this.registerHandler("getModules",()=>({modules:Array.from(this.modules.keys()),handlers:Array.from(this.messageHandlers.keys()),moduleCount:this.modules.size})),this.registerHandler("performMainAction",e=>this.performCombinedAction(e))}loadStaticModules(){console.log("[Comet Bridge] Loading static modules...");let e=0;for(const t of p)try{t&&(this.registerModule(t),e++)}catch(r){console.warn("[Comet Bridge] Failed to register module:",r)}console.log(`[Comet Bridge] Loaded ${e}/${p.length} modules`)}registerModule(e){try{if(!this.isValidModule(e))throw new Error("Invalid module configuration");const t=e.name;if(this.modules.has(t)){console.warn(`[Comet Bridge] Module "${t}" already registered, skipping`);return}if(this.modules.set(t,e),e.handlers&&Object.entries(e.handlers).forEach(([r,a])=>{typeof a=="function"&&(this.registerHandler(r,a),this.moduleRegistry.set(r,t))}),typeof e.init=="function")try{e.init()}catch(r){console.warn(`[Comet Bridge] Module "${t}" init failed:`,r)}console.log(`[Comet Bridge] Module "${t}" registered successfully`)}catch(t){throw console.error("[Comet Bridge] Module registration failed:",t),t}}isValidModule(e){return!!(e&&typeof e=="object"&&e.name&&typeof e.name=="string"&&(e.handlers||e.mainAction))}registerHandler(e,t){if(typeof t!="function")throw new Error(`Handler for "${e}" must be a function`);this.messageHandlers.has(e)&&console.warn(`[Comet Bridge] Handler "${e}" already exists, overriding`),this.messageHandlers.set(e,t)}async handleMessage(e,t,r){try{const{type:a,data:o,id:i}=e;if(!a){r({success:!1,error:"Message type required"});return}console.log(`[Comet Bridge] Message: ${a}`,o);const n=this.messageHandlers.get(a);if(!n){r({success:!1,error:`No handler for: ${a}`,availableHandlers:Array.from(this.messageHandlers.keys()),moduleCount:this.modules.size,loadStrategy:this.moduleLoadStrategy});return}const c=await this.executeHandler(n,o,t),g=this.moduleRegistry.get(a);r({success:!0,data:c,module:g,id:i})}catch(a){console.error("[Comet Bridge] Message handling error:",a),r({success:!1,error:a.message||"Internal error",id:e.id})}}async executeHandler(e,t,r){try{return await e(t,r)}catch(a){throw console.error("[Comet Bridge] Handler execution error:",a),a}}async performCombinedAction(e){const t={},r={};for(const[a,o]of this.modules)try{o.mainAction&&typeof o.mainAction=="function"?t[a]=await o.mainAction(e):o.analyze&&typeof o.analyze=="function"&&(t[a]=await o.analyze(e))}catch(i){r[a]=i.message,console.warn(`[Comet Bridge] Module "${a}" failed:`,i)}return{success:Object.keys(r).length===0,message:`Combined action completed across ${Object.keys(t).length} modules`,results:t,errors:Object.keys(r).length>0?r:void 0,timestamp:Date.now(),url:window.location.href,loadStrategy:this.moduleLoadStrategy}}notifyReady(){try{chrome.runtime.sendMessage({type:"contentScriptReady",data:{url:window.location.href,modules:Array.from(this.modules.keys()),moduleCount:this.modules.size,timestamp:Date.now(),loadStrategy:this.moduleLoadStrategy}})}catch(e){console.warn("[Comet Bridge] Failed to notify background:",e)}}}const j=new H;typeof globalThis<"u"&&(globalThis.scriptBridge=j);const S={name:"Comet Extension",theme:"metro",variant:"light"},A={module:"userAuth",autoLogin:!0,sessionDays:7,rememberLogin:!0},b={auth:!0,notifications:!0},v={size:"lg",animations:!0},k=!0,N=Object.freeze(Object.defineProperty({__proto__:null,app:S,auth:A,default:{app:S,auth:A,features:b,ui:v,extensionEnabled:k},extensionEnabled:k,features:b,ui:v},Symbol.toStringTag,{value:"Module"}))})();
//# sourceMappingURL=bridge.js.map
