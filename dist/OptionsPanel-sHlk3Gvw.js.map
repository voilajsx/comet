{"version":3,"file":"OptionsPanel-sHlk3Gvw.js","sources":["../src/features/_quote-generator/hooks/useQuoteGenerator.ts","../src/features/_quote-generator/components/OptionsPanel.tsx"],"sourcesContent":["/**\n * Quote Generator Hook - Simple Demo\n * Shows API utility and Storage with clean architecture\n * @module @voilajsx/comet\n * @file src/features/quote-generator/hooks/useQuoteGenerator.ts\n */\n\nimport { useState, useEffect } from 'react';\nimport { storage } from '@voilajsx/comet/storage';\nimport { comet } from '@voilajsx/comet/api';\n\n// Simple types\ninterface Quote {\n  text: string;\n  author: string;\n  category: 'advice' | 'wisdom' | 'motivational';\n  source: 'api' | 'fallback';\n  timestamp: number;\n}\n\ninterface Settings {\n  quoteType: 'general' | 'motivational';\n}\n\nexport function useQuoteGenerator() {\n  const [currentQuote, setCurrentQuote] = useState<Quote | null>(null);\n  const [settings, setSettings] = useState<Settings>({ quoteType: 'general' });\n  const [loading, setLoading] = useState(false);\n\n  // Load settings on mount\n  useEffect(() => {\n    loadSettings();\n  }, []);\n\n  const loadSettings = async () => {\n    try {\n      const quoteType = await storage.get('quoteGenerator.type', 'general');\n      setSettings({ quoteType });\n    } catch (error) {\n      console.error('Failed to load settings:', error);\n    }\n  };\n\n  // Get quote (API Utility demo)\n  const getQuote = async () => {\n    setLoading(true);\n    \n    try {\n      let quote: Quote;\n      \n      if (settings.quoteType === 'motivational') {\n        quote = await getMotivationalQuote();\n      } else {\n        quote = await getGeneralQuote();\n      }\n      \n      setCurrentQuote(quote);\n      return { success: true, data: quote };\n    } catch (error) {\n      return { success: false, error: error.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update setting\n  const updateSetting = async (key: keyof Settings, value: any) => {\n    setSettings(prev => ({ ...prev, [key]: value }));\n    await storage.set(`quoteGenerator.${key === 'quoteType' ? 'type' : key}`, value);\n  };\n\n  return {\n    currentQuote,\n    settings,\n    loading,\n    getQuote,\n    updateSetting,\n  };\n}\n\n// API functions (moved from index.ts)\nasync function getGeneralQuote(): Promise<Quote> {\n  try {\n    const response = await comet.get('https://api.adviceslip.com/advice');\n\n    if (response.ok && response.data?.data?.slip?.advice) {\n      return {\n        text: response.data.data.slip.advice,\n        author: 'Anonymous',\n        category: 'advice',\n        source: 'api',\n        timestamp: Date.now(),\n      };\n    } else {\n      throw new Error('API failed');\n    }\n  } catch (error) {\n    return getFallbackQuote();\n  }\n}\n\nasync function getMotivationalQuote(): Promise<Quote> {\n  try {\n    // Try API first\n    const quote = await getGeneralQuote();\n    if (quote.source === 'api') {\n      quote.category = 'motivational';\n      return quote;\n    } else {\n      return getMotivationalFallback();\n    }\n  } catch (error) {\n    return getMotivationalFallback();\n  }\n}\n\nfunction getFallbackQuote(): Quote {\n  const quotes = [\n    { text: 'The only way to do great work is to love what you do.', author: 'Steve Jobs' },\n    { text: \"Life is what happens while you're busy making other plans.\", author: 'John Lennon' },\n    { text: 'The future belongs to those who believe in their dreams.', author: 'Eleanor Roosevelt' },\n    { text: 'Be yourself; everyone else is already taken.', author: 'Oscar Wilde' },\n    { text: 'In the middle of difficulty lies opportunity.', author: 'Albert Einstein' },\n  ];\n\n  const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n\n  return {\n    ...randomQuote,\n    category: 'wisdom',\n    source: 'fallback',\n    timestamp: Date.now(),\n  };\n}\n\nfunction getMotivationalFallback(): Quote {\n  const quotes = [\n    { text: 'Success is not final, failure is not fatal: it is the courage to continue that counts.', author: 'Winston Churchill' },\n    { text: 'The only impossible journey is the one you never begin.', author: 'Tony Robbins' },\n    { text: \"Don't watch the clock; do what it does. Keep going.\", author: 'Sam Levenson' },\n    { text: \"Believe you can and you're halfway there.\", author: 'Theodore Roosevelt' },\n    { text: 'The way to get started is to quit talking and begin doing.', author: 'Walt Disney' },\n  ];\n\n  const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n\n  return {\n    ...randomQuote,\n    category: 'motivational',\n    source: 'fallback',\n    timestamp: Date.now(),\n  };\n}","/**\n * Quote Generator Options Panel - Simple Demo\n * @module @voilajsx/comet\n * @file src/features/quote-generator/components/OptionsPanel.tsx\n */\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@voilajsx/uikit/card';\nimport { Label } from '@voilajsx/uikit/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@voilajsx/uikit/select';\nimport { Quote } from 'lucide-react';\nimport { useQuoteGenerator } from '../hooks/useQuoteGenerator';\n\nexport default function QuoteGeneratorOptionsPanel() {\n  const { settings, updateSetting } = useQuoteGenerator();\n\n  const handleTypeChange = (type) => {\n    updateSetting('quoteType', type);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      \n      <div>\n        <h1 className=\"text-2xl font-bold\">Quote Generator Settings</h1>\n        <p className=\"text-muted-foreground\">\n          Choose your preferred quote type\n        </p>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Quote className=\"w-5 h-5\" />\n            Quote Settings\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          \n          <div className=\"space-y-3\">\n            <Label htmlFor=\"quote-type-select\" className=\"text-sm font-medium\">\n              Quote Category\n            </Label>\n            <div class=\"pt-2\">\n<Select value={settings.quoteType} onValueChange={handleTypeChange}>\n              <SelectTrigger id=\"quote-type-select\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"general\">\n                  <div>\n                    <div className=\"font-medium\">General Quotes</div>\n                    <div className=\"text-xs text-muted-foreground\">\n                      Wisdom and life advice\n                    </div>\n                  </div>\n                </SelectItem>\n                <SelectItem value=\"motivational\">\n                  <div>\n                    <div className=\"font-medium\">Motivational Quotes</div>\n                    <div className=\"text-xs text-muted-foreground\">\n                      Inspiring and uplifting messages\n                    </div>\n                  </div>\n                </SelectItem>\n              </SelectContent>\n            </Select>\n            </div>\n            \n          </div>\n\n          <div className=\"text-xs text-muted-foreground bg-muted/50 p-3 rounded\">\n            <strong>API Demo:</strong> Uses external API with offline fallback when network fails.\n          </div>\n\n        </CardContent>\n      </Card>\n    </div>\n  );\n}``"],"names":["useQuoteGenerator","currentQuote","setCurrentQuote","useState","settings","setSettings","loading","setLoading","useEffect","loadSettings","quoteType","storage","error","quote","getMotivationalQuote","getGeneralQuote","key","value","prev","response","comet","getFallbackQuote","getMotivationalFallback","quotes","QuoteGeneratorOptionsPanel","updateSetting","handleTypeChange","type","jsxs","jsx","Card","CardHeader","CardTitle","Quote","CardContent","Label","Select","SelectTrigger","SelectValue","SelectContent","SelectItem"],"mappings":"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"}