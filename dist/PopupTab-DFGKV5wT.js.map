{"version":3,"file":"PopupTab-DFGKV5wT.js","sources":["../node_modules/lucide-react/dist/esm/icons/refresh-cw.js","../src/features/quote-generator/components/PopupTab.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.516.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\", key: \"v9h5vc\" }],\n  [\"path\", { d: \"M21 3v5h-5\", key: \"1q7to0\" }],\n  [\"path\", { d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\", key: \"3uifl3\" }],\n  [\"path\", { d: \"M8 16H3v5\", key: \"1cv678\" }]\n];\nconst RefreshCw = createLucideIcon(\"refresh-cw\", __iconNode);\n\nexport { __iconNode, RefreshCw as default };\n//# sourceMappingURL=refresh-cw.js.map\n","/**\n * Quote Generator Popup Tab Component\n * @module @voilajsx/comet\n * @file src/features/quote-generator/components/PopupTab.tsx\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { TabsContent } from '@voilajsx/uikit/tabs';\nimport { Card, CardContent, CardHeader, CardTitle } from '@voilajsx/uikit/card';\nimport { Button } from '@voilajsx/uikit/button';\nimport { Alert, AlertDescription } from '@voilajsx/uikit/alert';\nimport { Separator } from '@voilajsx/uikit/separator';\nimport { Badge } from '@voilajsx/uikit/badge';\nimport { Quote, Loader2, CheckCircle, AlertCircle, RefreshCw } from 'lucide-react';\nimport { messaging } from '@voilajsx/comet/messaging';\nimport { storage } from '@voilajsx/comet/storage';\n\n/**\n * Built-in ActionResult component\n */\nfunction ActionResult({ \n  result, \n  onDismiss, \n  autoDismiss = true, \n  autoDismissDelay = 2000 \n}) {\n  React.useEffect(() => {\n    if (result && autoDismiss && onDismiss) {\n      const timer = setTimeout(onDismiss, autoDismissDelay);\n      return () => clearTimeout(timer);\n    }\n  }, [result, autoDismiss, autoDismissDelay, onDismiss]);\n\n  if (!result) return null;\n\n  const Icon = result.type === 'success' ? CheckCircle : AlertCircle;\n  const variant = result.type === 'success' ? 'default' : 'destructive';\n  const iconColor = result.type === 'success' ? 'text-green-500' : 'text-destructive';\n\n  return (\n    <Alert variant={variant} className=\"border-border\">\n      <Icon className={`h-4 w-4 ${iconColor}`} />\n      <AlertDescription className=\"text-sm pt-1\">\n        {result.message}\n      </AlertDescription>\n    </Alert>\n  );\n}\n\nexport default function QuoteGeneratorTab({ value }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [quoteResult, setQuoteResult] = useState(null);\n  const [currentQuote, setCurrentQuote] = useState(null);\n  const [quoteType, setQuoteType] = useState('general');\n\n  // Load quote type setting on mount\n  useEffect(() => {\n    loadQuoteType();\n  }, []);\n\n  const loadQuoteType = async () => {\n    try {\n      const type = await storage.get('quoteGenerator.type', 'general');\n      setQuoteType(type);\n    } catch (error) {\n      console.error('[Quote Generator] Failed to load quote type:', error);\n    }\n  };\n\n  const handleGetQuote = async () => {\n    setIsLoading(true);\n    setQuoteResult(null);\n\n    try {\n      const response = await messaging.sendToContent({\n        type: quoteType === 'motivational' ? 'getMotivationalQuote' : 'getQuote',\n        data: {}\n      });\n\n      if (response?.success && response?.data?.success) {\n        // API quote\n        setCurrentQuote(response.data.quote);\n        setQuoteResult({\n          type: 'success',\n          message: 'Quote fetched successfully!'\n        });\n      } else if (response?.data?.fallbackQuote) {\n        // Fallback quote\n        setCurrentQuote(response.data.fallbackQuote);\n        setQuoteResult({\n          type: 'success',\n          message: 'Showing offline quote'\n        });\n      } else {\n        setQuoteResult({\n          type: 'error',\n          message: 'Failed to get quote'\n        });\n      }\n    } catch (error) {\n      setQuoteResult({\n        type: 'error',\n        message: 'Could not fetch quote'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getQuoteTypeLabel = () => {\n    return quoteType === 'motivational' ? 'Motivational Quote' : 'General Quote';\n  };\n\n  const getQuoteTypeDescription = () => {\n    return quoteType === 'motivational' \n      ? 'Inspiring and uplifting messages'\n      : 'Wisdom and life advice';\n  };\n\n  return (\n    <TabsContent value={value} className=\"mt-0\">\n      <Card className=\"bg-card border-border\">\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base text-card-foreground flex items-center gap-2\">\n            <Quote className=\"w-4 h-4\" />\n            {getQuoteTypeLabel()}\n          </CardTitle>\n          <p className=\"text-xs text-muted-foreground\">\n            {getQuoteTypeDescription()}\n          </p>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          \n          <Button\n            onClick={handleGetQuote}\n            disabled={isLoading}\n            className=\"w-full\"\n            variant=\"default\"\n          >\n            {isLoading ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Getting Quote...\n              </>\n            ) : (\n              <>\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\n                Get New Quote\n              </>\n            )}\n          </Button>\n\n          <ActionResult\n            result={quoteResult}\n            onDismiss={() => setQuoteResult(null)}\n            autoDismiss={true}\n            autoDismissDelay={2000}\n          />\n\n          {currentQuote && (\n            <div className=\"space-y-3\">\n              <Separator className=\"bg-border\" />\n              \n              {/* Quote display */}\n              <div className=\"bg-muted/50 p-4 rounded border border-border\">\n                <div className=\"text-sm italic mb-3 text-card-foreground leading-relaxed\">\n                  \"{currentQuote.text}\"\n                </div>\n                \n                <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n                  <span>â€” {currentQuote.author}</span>\n                  <div className=\"flex items-center gap-2\">\n                    {currentQuote.category && (\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {currentQuote.category}\n                      </Badge>\n                    )}\n                    {currentQuote.source === 'fallback' && (\n                      <Badge variant=\"secondary\" className=\"text-xs\">\n                        Offline\n                      </Badge>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Helper text */}\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground\">\n              Change quote type in settings\n            </p>\n          </div>\n          \n        </CardContent>\n      </Card>\n    </TabsContent>\n  );\n}"],"names":["__iconNode","RefreshCw","createLucideIcon","ActionResult","result","onDismiss","autoDismiss","autoDismissDelay","React","timer","Icon","CheckCircle","AlertCircle","variant","iconColor","jsxs","Alert","jsx","AlertDescription","QuoteGeneratorTab","value","isLoading","setIsLoading","useState","quoteResult","setQuoteResult","currentQuote","setCurrentQuote","quoteType","setQuoteType","useEffect","loadQuoteType","type","storage","error","handleGetQuote","response","messaging","getQuoteTypeLabel","getQuoteTypeDescription","TabsContent","Card","CardHeader","CardTitle","Quote","CardContent","Button","Fragment","Loader2","Separator","Badge"],"mappings":"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","x_google_ignoreList":[0]}