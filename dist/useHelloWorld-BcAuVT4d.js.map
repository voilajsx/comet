{"version":3,"file":"useHelloWorld-BcAuVT4d.js","sources":["../node_modules/@voilajsx/uikit/dist/input.js","../src/features/hello-world/hooks/useHelloWorld.ts"],"sourcesContent":["import { jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"./utils.js\";\nconst Input = forwardRef(({ className, type = \"text\", ...props }, ref) => {\n  return /* @__PURE__ */ jsx(\n    \"input\",\n    {\n      type,\n      className: cn(\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      ),\n      ref,\n      ...props\n    }\n  );\n});\nInput.displayName = \"Input\";\nexport {\n  Input\n};\n//# sourceMappingURL=input.js.map\n","/**\n * Hello World Hook - Simplified\n * @module @voilajsx/comet\n * @file src/features/hello-world/hooks/useHelloWorld.ts\n */\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { storage } from '@voilajsx/comet/storage';\n\nexport function useHelloWorld() {\n  const [clickCount, setClickCount] = useState(0);\n  const [userName, setUserName] = useState('Friend');\n  const [loading, setLoading] = useState(true);\n\n  // Load from storage\n  useEffect(() => {\n    const load = async () => {\n      try {\n        const [count, name] = await Promise.all([\n          storage.get('helloworld-count', 0),\n          storage.get('helloworld-name', 'Friend')\n        ]);\n        setClickCount(count);\n        setUserName(name);\n      } catch (error) {\n        console.error('[Hello World] Load failed:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    load();\n  }, []);\n\n  const message = `Hello, ${userName}! You've clicked ${clickCount} times. ðŸ‘‹`;\n\n  const handleClick = useCallback(async () => {\n    const newCount = clickCount + 1;\n    setClickCount(newCount);\n    await storage.set('helloworld-count', newCount);\n  }, [clickCount]);\n\n  const updateName = useCallback(async (name: string) => {\n    const newName = name.trim() || 'Friend';\n    setUserName(newName);\n    await storage.set('helloworld-name', newName);\n  }, []);\n\n  const reset = useCallback(async () => {\n    await storage.remove(['helloworld-count', 'helloworld-name']);\n    setClickCount(0);\n    setUserName('Friend');\n  }, []);\n\n  return {\n    clickCount,\n    userName,\n    message,\n    loading,\n    handleClick,\n    updateName,\n    reset,\n  };\n}"],"names":["Input","forwardRef","className","type","props","ref","jsx","cn","useHelloWorld","clickCount","setClickCount","useState","userName","setUserName","loading","setLoading","useEffect","count","name","storage","error","message","handleClick","useCallback","newCount","updateName","newName","reset"],"mappings":"gGAGK,MAACA,EAAQC,EAAAA,WAAW,CAAC,CAAE,UAAAC,EAAW,KAAAC,EAAO,OAAQ,GAAGC,CAAO,EAAEC,IACzCC,EAAG,IACxB,QACA,CACE,KAAAH,EACA,UAAWI,EACT,wUACAL,CACD,EACD,IAAAG,EACA,GAAGD,CACT,CACG,CACF,EACDJ,EAAM,YAAc,QCRb,SAASQ,GAAgB,CAC9B,KAAM,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAS,CAAC,EACxC,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAAS,QAAQ,EAC3C,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAI,EAG3CK,EAAAA,UAAU,IAAM,EACD,SAAY,CACnB,GAAA,CACF,KAAM,CAACC,EAAOC,CAAI,EAAI,MAAM,QAAQ,IAAI,CACtCC,EAAQ,IAAI,mBAAoB,CAAC,EACjCA,EAAQ,IAAI,kBAAmB,QAAQ,CAAA,CACxC,EACDT,EAAcO,CAAK,EACnBJ,EAAYK,CAAI,QACTE,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,CAAA,QACjD,CACAL,EAAW,EAAK,CAAA,CAEpB,GACK,CACP,EAAG,EAAE,EAEL,MAAMM,EAAU,UAAUT,CAAQ,oBAAoBH,CAAU,aAE1Da,EAAcC,EAAAA,YAAY,SAAY,CAC1C,MAAMC,EAAWf,EAAa,EAC9BC,EAAcc,CAAQ,EAChB,MAAAL,EAAQ,IAAI,mBAAoBK,CAAQ,CAAA,EAC7C,CAACf,CAAU,CAAC,EAETgB,EAAaF,cAAY,MAAOL,GAAiB,CAC/C,MAAAQ,EAAUR,EAAK,KAAA,GAAU,SAC/BL,EAAYa,CAAO,EACb,MAAAP,EAAQ,IAAI,kBAAmBO,CAAO,CAC9C,EAAG,EAAE,EAECC,EAAQJ,EAAAA,YAAY,SAAY,CACpC,MAAMJ,EAAQ,OAAO,CAAC,mBAAoB,iBAAiB,CAAC,EAC5DT,EAAc,CAAC,EACfG,EAAY,QAAQ,CACtB,EAAG,EAAE,EAEE,MAAA,CACL,WAAAJ,EACA,SAAAG,EACA,QAAAS,EACA,QAAAP,EACA,YAAAQ,EACA,WAAAG,EACA,MAAAE,CACF,CACF","x_google_ignoreList":[0]}