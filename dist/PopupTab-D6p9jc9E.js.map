{"version":3,"file":"PopupTab-D6p9jc9E.js","sources":["../src/features/quote-generator/components/PopupTab.tsx"],"sourcesContent":["/**\n * Quote Generator Popup Tab - Improved TypeScript Version\n * @module @voilajsx/comet\n * @file src/features/quote-generator/components/PopupTab.tsx\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { TabsContent } from '@voilajsx/uikit/tabs';\nimport { Card, CardContent, CardHeader, CardTitle } from '@voilajsx/uikit/card';\nimport { Button } from '@voilajsx/uikit/button';\nimport { Alert, AlertDescription } from '@voilajsx/uikit/alert';\nimport { Separator } from '@voilajsx/uikit/separator';\nimport { Badge } from '@voilajsx/uikit/badge';\nimport { Quote, Loader2, CheckCircle, AlertCircle, RefreshCw } from 'lucide-react';\nimport { storage } from '@voilajsx/comet/storage';\n\n// ‚úÖ DIRECT IMPORTS - Simple and clean!\nimport { getQuote, getMotivationalQuote } from '../index.ts';\n\n// Type definitions\ninterface QuoteData {\n  text: string;\n  author: string;\n  category: 'advice' | 'wisdom' | 'motivational';\n  source: 'api' | 'fallback';\n  timestamp: number;\n}\n\ninterface StatusResult {\n  type: 'success' | 'error';\n  message: string;\n}\n\ninterface PopupTabProps {\n  value: string;\n  currentTab?: chrome.tabs.Tab;\n}\n\ninterface QuoteTypeConfig {\n  title: string;\n  desc: string;\n  buttonText: string;\n}\n\ntype QuoteType = 'general' | 'motivational';\n\n/**\n * Status alert component with auto-dismiss\n */\nfunction StatusAlert({ \n  result, \n  onDismiss,\n  autoHide = true,\n  hideDelay = 2000 \n}: {\n  result: StatusResult | null;\n  onDismiss: () => void;\n  autoHide?: boolean;\n  hideDelay?: number;\n}) {\n  useEffect(() => {\n    if (result && autoHide && onDismiss) {\n      const timer = setTimeout(onDismiss, hideDelay);\n      return () => clearTimeout(timer);\n    }\n  }, [result, onDismiss, autoHide, hideDelay]);\n\n  if (!result) return null;\n\n  const Icon = result.type === 'success' ? CheckCircle : AlertCircle;\n\n  return (\n    <Alert variant={result.type === 'success' ? 'default' : 'destructive'}>\n      <Icon className=\"h-4 w-4\" />\n      <AlertDescription>{result.message}</AlertDescription>\n    </Alert>\n  );\n}\n\n/**\n * Quote display component\n */\nfunction QuoteDisplay({ quote }: { quote: QuoteData }) {\n  return (\n    <div className=\"space-y-3\">\n      <Separator />\n      \n      <div className=\"bg-muted/50 p-4 rounded border\">\n        <div className=\"text-sm italic mb-3 leading-relaxed\">\n          \"{quote.text}\"\n        </div>\n        \n        <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n          <span>‚Äî {quote.author}</span>\n          <div className=\"flex gap-2\">\n            <Badge variant=\"outline\">\n              {quote.category}\n            </Badge>\n            <Badge variant={quote.source === 'api' ? 'default' : 'secondary'}>\n              {quote.source === 'api' ? 'Live' : 'Offline'}\n            </Badge>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function QuoteGeneratorTab({ value, currentTab }: PopupTabProps) {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [status, setStatus] = useState<StatusResult | null>(null);\n  const [currentQuote, setCurrentQuote] = useState<QuoteData | null>(null);\n  const [quoteType, setQuoteType] = useState<QuoteType>('general');\n\n  // Load quote type setting on mount\n  useEffect(() => {\n    loadQuoteType();\n  }, []);\n\n  const loadQuoteType = async (): Promise<void> => {\n    try {\n      const type = await storage.get('quoteGenerator.type', 'general') as QuoteType;\n      setQuoteType(type);\n    } catch (error: unknown) {\n      console.warn('[Quote PopupTab] Failed to load quote type:', error);\n      setQuoteType('general');\n    }\n  };\n\n  const handleGetQuote = async (): Promise<void> => {\n    console.log('[Quote PopupTab] üöÄ Getting quote, type:', quoteType);\n    \n    setIsLoading(true);\n    setStatus(null);\n\n    try {\n      // ‚úÖ DIRECT FUNCTION CALL - No complex messaging!\n      const quote: QuoteData = quoteType === 'motivational' \n        ? await getMotivationalQuote()\n        : await getQuote();\n\n      console.log('[Quote PopupTab] ‚úÖ Quote received:', quote);\n      \n      setCurrentQuote(quote);\n      setStatus({\n        type: 'success',\n        message: quote.source === 'api' ? 'Fresh quote fetched!' : 'Offline quote loaded'\n      });\n\n    } catch (error: unknown) {\n      console.error('[Quote PopupTab] ‚ùå Error:', error);\n      setStatus({\n        type: 'error',\n        message: 'Failed to get quote. Please try again.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Quote type configuration\n  const quoteTypeConfig: Record<QuoteType, QuoteTypeConfig> = {\n    general: { \n      title: 'General Quote', \n      desc: 'Wisdom and life advice',\n      buttonText: 'Get Wisdom Quote'\n    },\n    motivational: { \n      title: 'Motivational Quote', \n      desc: 'Inspiring messages for motivation',\n      buttonText: 'Get Motivational Quote'\n    }\n  };\n\n  const currentConfig = quoteTypeConfig[quoteType];\n\n  return (\n    <TabsContent value={value}>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-base flex items-center gap-2\">\n            <Quote className=\"w-4 h-4\" />\n            {currentConfig.title}\n          </CardTitle>\n          <p className=\"text-xs text-muted-foreground\">{currentConfig.desc}</p>\n        </CardHeader>\n        \n        <CardContent className=\"space-y-4\">\n          {/* Get Quote Button */}\n          <Button\n            onClick={handleGetQuote}\n            disabled={isLoading}\n            className=\"w-full\"\n          >\n            {isLoading ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Getting Quote...\n              </>\n            ) : (\n              <>\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\n                {currentConfig.buttonText}\n              </>\n            )}\n          </Button>\n\n          {/* Status Alert */}\n          <StatusAlert \n            result={status} \n            onDismiss={() => setStatus(null)}\n            autoHide={true}\n            hideDelay={3000}\n          />\n\n          {/* Quote Display */}\n          {currentQuote && <QuoteDisplay quote={currentQuote} />}\n\n          {/* Helper text */}\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground\">\n              Change quote type in extension settings\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </TabsContent>\n  );\n}"],"names":["StatusAlert","result","onDismiss","autoHide","hideDelay","useEffect","timer","Icon","CheckCircle","AlertCircle","Alert","jsx","AlertDescription","QuoteDisplay","quote","jsxs","Separator","Badge","QuoteGeneratorTab","value","currentTab","isLoading","setIsLoading","useState","status","setStatus","currentQuote","setCurrentQuote","quoteType","setQuoteType","loadQuoteType","type","storage","error","handleGetQuote","getMotivationalQuote","getQuote","currentConfig","TabsContent","Card","CardHeader","CardTitle","Quote","CardContent","Button","Fragment","Loader2","RefreshCw"],"mappings":"+ZAiDA,SAASA,EAAY,CACnB,OAAAC,EACA,UAAAC,EACA,SAAAC,EAAW,GACX,UAAAC,EAAY,GACd,EAKG,CAQG,GAPJC,EAAAA,UAAU,IAAM,CACV,GAAAJ,GAAUE,GAAYD,EAAW,CAC7B,MAAAI,EAAQ,WAAWJ,EAAWE,CAAS,EACtC,MAAA,IAAM,aAAaE,CAAK,CAAA,GAEhC,CAACL,EAAQC,EAAWC,EAAUC,CAAS,CAAC,EAEvC,CAACH,EAAe,OAAA,KAEpB,MAAMM,EAAON,EAAO,OAAS,UAAYO,EAAcC,EAEvD,cACGC,EAAM,CAAA,QAAST,EAAO,OAAS,UAAY,UAAY,cACtD,SAAA,CAACU,EAAAA,IAAAJ,EAAA,CAAK,UAAU,SAAU,CAAA,EAC1BI,EAAAA,IAACC,EAAkB,CAAA,SAAAX,EAAO,OAAQ,CAAA,CAAA,EACpC,CAEJ,CAKA,SAASY,EAAa,CAAE,MAAAC,GAA+B,CAEnD,OAAAC,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAJ,EAAA,IAACK,EAAU,EAAA,EAEXD,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,sCAAsC,SAAA,CAAA,IACjDD,EAAM,KAAK,GAAA,EACf,EAEAC,EAAAA,KAAC,MAAI,CAAA,UAAU,kEACb,SAAA,CAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,KAAGD,EAAM,MAAA,EAAO,EACtBC,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAJ,EAAA,IAACM,EAAM,CAAA,QAAQ,UACZ,SAAAH,EAAM,SACT,EACCH,EAAA,IAAAM,EAAA,CAAM,QAASH,EAAM,SAAW,MAAQ,UAAY,YAClD,SAAMA,EAAA,SAAW,MAAQ,OAAS,SACrC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,CAEA,SAAwBI,EAAkB,CAAE,MAAAC,EAAO,WAAAC,GAA6B,CAC9E,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAkB,EAAK,EACnD,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAA8B,IAAI,EACxD,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAA2B,IAAI,EACjE,CAACK,EAAWC,CAAY,EAAIN,EAAAA,SAAoB,SAAS,EAG/DlB,EAAAA,UAAU,IAAM,CACAyB,EAAA,CAChB,EAAG,EAAE,EAEL,MAAMA,EAAgB,SAA2B,CAC3C,GAAA,CACF,MAAMC,EAAO,MAAMC,EAAQ,IAAI,sBAAuB,SAAS,EAC/DH,EAAaE,CAAI,QACVE,EAAgB,CACf,QAAA,KAAK,8CAA+CA,CAAK,EACjEJ,EAAa,SAAS,CAAA,CAE1B,EAEMK,EAAiB,SAA2B,CACxC,QAAA,IAAI,2CAA4CN,CAAS,EAEjEN,EAAa,EAAI,EACjBG,EAAU,IAAI,EAEV,GAAA,CAEF,MAAMX,EAAmBc,IAAc,eACnC,MAAMO,EAAqB,EAC3B,MAAMC,EAAS,EAEX,QAAA,IAAI,qCAAsCtB,CAAK,EAEvDa,EAAgBb,CAAK,EACXW,EAAA,CACR,KAAM,UACN,QAASX,EAAM,SAAW,MAAQ,uBAAyB,sBAAA,CAC5D,QAEMmB,EAAgB,CACf,QAAA,MAAM,4BAA6BA,CAAK,EACtCR,EAAA,CACR,KAAM,QACN,QAAS,wCAAA,CACV,CAAA,QACD,CACAH,EAAa,EAAK,CAAA,CAEtB,EAgBMe,EAbsD,CAC1D,QAAS,CACP,MAAO,gBACP,KAAM,yBACN,WAAY,kBACd,EACA,aAAc,CACZ,MAAO,qBACP,KAAM,oCACN,WAAY,wBAAA,CAEhB,EAEsCT,CAAS,EAE/C,OACGjB,EAAA,IAAA2B,EAAA,CAAY,MAAAnB,EACX,SAAAJ,OAACwB,EACC,CAAA,SAAA,CAAAxB,OAACyB,EACC,CAAA,SAAA,CAACzB,EAAAA,KAAA0B,EAAA,CAAU,UAAU,oCACnB,SAAA,CAAC9B,EAAAA,IAAA+B,EAAA,CAAM,UAAU,SAAU,CAAA,EAC1BL,EAAc,KAAA,EACjB,EACC1B,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAiC,WAAc,IAAK,CAAA,CAAA,EACnE,EAEAI,EAAAA,KAAC4B,EAAY,CAAA,UAAU,YAErB,SAAA,CAAAhC,EAAA,IAACiC,EAAA,CACC,QAASV,EACT,SAAUb,EACV,UAAU,SAET,WAEGN,EAAAA,KAAA8B,EAAA,SAAA,CAAA,SAAA,CAAClC,EAAAA,IAAAmC,EAAA,CAAQ,UAAU,2BAA4B,CAAA,EAAE,kBAAA,CAAA,CAEnD,EAGE/B,EAAAA,KAAA8B,EAAA,SAAA,CAAA,SAAA,CAAClC,EAAAA,IAAAoC,EAAA,CAAU,UAAU,cAAe,CAAA,EACnCV,EAAc,UAAA,CACjB,CAAA,CAAA,CAEJ,EAGA1B,EAAA,IAACX,EAAA,CACC,OAAQwB,EACR,UAAW,IAAMC,EAAU,IAAI,EAC/B,SAAU,GACV,UAAW,GAAA,CACb,EAGCC,GAAgBf,EAAAA,IAACE,EAAa,CAAA,MAAOa,CAAc,CAAA,EAGpDf,EAAAA,IAAC,OAAI,UAAU,cACb,eAAC,IAAE,CAAA,UAAU,gCAAgC,SAAA,yCAE7C,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ"}