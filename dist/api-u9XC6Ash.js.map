{"version":3,"file":"api-u9XC6Ash.js","sources":["../src/platform/api.ts"],"sourcesContent":["/**\n * Comet Framework - Universal API utilities\n * Clean API proxy that works from any extension context\n * @module @voilajsx/comet\n * @file src/platform/api.ts\n */\n\n// Type definitions\ninterface FetchOptions {\n  method?: 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';\n  headers?: Record<string, string>;\n  body?: string | object | null;\n  timeout?: number;\n}\n\ninterface ApiResponse {\n  ok: boolean;\n  status: number;\n  data?: any;\n  error?: string;\n  json(): Promise<any>;\n}\n\ninterface RuntimeMessage {\n  type: string;\n  data: {\n    url: string;\n    method: string;\n    headers: Record<string, string>;\n    body: string | null;\n    timeout: number;\n  };\n}\n\ninterface RuntimeResponse {\n  success: boolean;\n  status: number;\n  data?: any;\n  error?: string;\n}\n\n/**\n * Universal API utilities that work from any extension context\n * Routes through service worker to avoid CORS issues\n */\nexport const comet = {\n  /**\n   * Base fetch method\n   */\n  async fetch(url: string, options: FetchOptions = {}): Promise<ApiResponse> {\n    try {\n      const response = await new Promise<RuntimeResponse>((resolve, reject) => {\n        const message: RuntimeMessage = {\n          type: 'api.fetch',\n          data: {\n            url,\n            method: options.method || 'GET',\n            headers: options.headers || {},\n            body: options.body ? (typeof options.body === 'string' ? options.body : JSON.stringify(options.body)) : null,\n            timeout: options.timeout || 30000,\n          },\n        };\n\n        chrome.runtime.sendMessage(message, (response: RuntimeResponse) => {\n          if (chrome.runtime.lastError) {\n            reject(new Error(chrome.runtime.lastError.message || 'Unknown runtime error'));\n          } else {\n            resolve(response);\n          }\n        });\n      });\n\n      return {\n        ok: response.success,\n        status: response.status,\n        json: () => Promise.resolve(response.data),\n        data: response.data,\n        error: response.error,\n      };\n    } catch (error: unknown) {\n      return {\n        ok: false,\n        status: 0,\n        error: error instanceof Error ? error.message : String(error),\n        json: () => Promise.reject(error),\n      };\n    }\n  },\n\n  /**\n   * REST convenience methods\n   */\n  async get(url: string, headers: Record<string, string> = {}): Promise<ApiResponse> {\n    return this.fetch(url, { method: 'GET', headers });\n  },\n\n  async post(url: string, data: string | object | null = null, headers: Record<string, string> = {}): Promise<ApiResponse> {\n    return this.fetch(url, {\n      method: 'POST',\n      body: data,\n      headers,\n    });\n  },\n\n  async put(url: string, data: string | object | null = null, headers: Record<string, string> = {}): Promise<ApiResponse> {\n    return this.fetch(url, {\n      method: 'PUT',\n      body: data,\n      headers,\n    });\n  },\n\n  async patch(url: string, data: string | object | null = null, headers: Record<string, string> = {}): Promise<ApiResponse> {\n    return this.fetch(url, {\n      method: 'PATCH',\n      body: data,\n      headers,\n    });\n  },\n\n  async delete(url: string, headers: Record<string, string> = {}): Promise<ApiResponse> {\n    return this.fetch(url, { method: 'DELETE', headers });\n  },\n};"],"names":["comet","url","options","response","resolve","reject","message","error","headers","data"],"mappings":"AA6CO,MAAMA,EAAQ,CAInB,MAAM,MAAMC,EAAaC,EAAwB,GAA0B,CACrE,GAAA,CACF,MAAMC,EAAW,MAAM,IAAI,QAAyB,CAACC,EAASC,IAAW,CACvE,MAAMC,EAA0B,CAC9B,KAAM,YACN,KAAM,CACJ,IAAAL,EACA,OAAQC,EAAQ,QAAU,MAC1B,QAASA,EAAQ,SAAW,CAAC,EAC7B,KAAMA,EAAQ,KAAQ,OAAOA,EAAQ,MAAS,SAAWA,EAAQ,KAAO,KAAK,UAAUA,EAAQ,IAAI,EAAK,KACxG,QAASA,EAAQ,SAAW,GAAA,CAEhC,EAEA,OAAO,QAAQ,YAAYI,EAAUH,GAA8B,CAC7D,OAAO,QAAQ,UACjBE,EAAO,IAAI,MAAM,OAAO,QAAQ,UAAU,SAAW,uBAAuB,CAAC,EAE7ED,EAAQD,CAAQ,CAClB,CACD,CAAA,CACF,EAEM,MAAA,CACL,GAAIA,EAAS,QACb,OAAQA,EAAS,OACjB,KAAM,IAAM,QAAQ,QAAQA,EAAS,IAAI,EACzC,KAAMA,EAAS,KACf,MAAOA,EAAS,KAClB,QACOI,EAAgB,CAChB,MAAA,CACL,GAAI,GACJ,OAAQ,EACR,MAAOA,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,EAC5D,KAAM,IAAM,QAAQ,OAAOA,CAAK,CAClC,CAAA,CAEJ,EAKA,MAAM,IAAIN,EAAaO,EAAkC,GAA0B,CACjF,OAAO,KAAK,MAAMP,EAAK,CAAE,OAAQ,MAAO,QAAAO,EAAS,CACnD,EAEA,MAAM,KAAKP,EAAaQ,EAA+B,KAAMD,EAAkC,CAAA,EAA0B,CAChH,OAAA,KAAK,MAAMP,EAAK,CACrB,OAAQ,OACR,KAAMQ,EACN,QAAAD,CAAA,CACD,CACH,EAEA,MAAM,IAAIP,EAAaQ,EAA+B,KAAMD,EAAkC,CAAA,EAA0B,CAC/G,OAAA,KAAK,MAAMP,EAAK,CACrB,OAAQ,MACR,KAAMQ,EACN,QAAAD,CAAA,CACD,CACH,EAEA,MAAM,MAAMP,EAAaQ,EAA+B,KAAMD,EAAkC,CAAA,EAA0B,CACjH,OAAA,KAAK,MAAMP,EAAK,CACrB,OAAQ,QACR,KAAMQ,EACN,QAAAD,CAAA,CACD,CACH,EAEA,MAAM,OAAOP,EAAaO,EAAkC,GAA0B,CACpF,OAAO,KAAK,MAAMP,EAAK,CAAE,OAAQ,SAAU,QAAAO,EAAS,CAAA,CAExD"}