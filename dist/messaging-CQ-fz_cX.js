const p="modulepreload",b=function(u){return"/"+u},m={},S=function(e,t,r){let s=Promise.resolve();if(t&&t.length>0){let i=function(n){return Promise.all(n.map(g=>Promise.resolve(g).then(d=>({status:"fulfilled",value:d}),d=>({status:"rejected",reason:d}))))};document.getElementsByTagName("link");const o=document.querySelector("meta[property=csp-nonce]"),h=o?.nonce||o?.getAttribute("nonce");s=i(t.map(n=>{if(n=b(n),n in m)return;m[n]=!0;const g=n.endsWith(".css"),d=g?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${n}"]${d}`))return;const c=document.createElement("link");if(c.rel=g?"stylesheet":p,g||(c.as="script"),c.crossOrigin="",c.href=n,h&&c.setAttribute("nonce",h),document.head.appendChild(c),g)return new Promise((y,w)=>{c.addEventListener("load",y),c.addEventListener("error",()=>w(new Error(`Unable to preload CSS for ${n}`)))})}))}function a(i){const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=i,window.dispatchEvent(o),!o.defaultPrevented)throw i}return s.then(i=>{for(const o of i||[])o.status==="rejected"&&a(o.reason);return e().catch(a)})},v=(()=>{if(typeof browser<"u")return browser;if(typeof chrome<"u")return chrome;throw new Error("No browser extension API available")})();class M{constructor(){this.api=v,this.syncQuota=this.api.storage.sync.QUOTA_BYTES||102400,this.localQuota=this.api.storage.local.QUOTA_BYTES||10485760,this.syncItemQuota=this.api.storage.sync.QUOTA_BYTES_PER_ITEM||8192,this.defaults={},this.defaultsLoaded=!1,this.isInitialized=!1,this.initialize()}async initialize(){if(!this.isInitialized)try{await this.loadDefaults(),await this.initializeDefaults(),this.isInitialized=!0,console.log("[Comet Storage] Initialized with defaults")}catch(e){console.warn("[Comet Storage] Initialization failed, continuing without defaults:",e),this.defaults={},this.defaultsLoaded=!0,this.isInitialized=!0}}async loadDefaults(){if(!this.defaultsLoaded)try{const e=await S(()=>import("./defaults-bi33ucUg.js"),[]);this.defaults=e.default||{},this.defaultsLoaded=!0,console.log("[Comet Storage] Loaded defaults from defaults.json")}catch{console.log("[Comet Storage] No defaults.json found, using empty defaults"),this.defaults={},this.defaultsLoaded=!0}}async initializeDefaults(){try{if((await this.api.storage.local.get("_defaultsInitialized"))._defaultsInitialized)return;Object.keys(this.defaults).length>0&&(await this.setDefaults(this.defaults),console.log("[Comet Storage] Initialized storage with defaults")),await this.api.storage.local.set({_defaultsInitialized:!0})}catch(e){console.warn("[Comet Storage] Failed to initialize defaults:",e)}}async setDefaults(e,t=""){for(const[r,s]of Object.entries(e)){const a=t?`${t}.${r}`:r;s&&typeof s=="object"&&!Array.isArray(s)?await this.setDefaults(s,a):await this.getRaw(a)===void 0&&await this.setRaw(a,s)}}async get(e=null,t=void 0,r="auto"){try{if(await this.initialize(),typeof e=="string"){const a=await this.getRaw(e,r);if(a!==void 0)return a;const i=this.getDefaultByPath(e);return i!==void 0?i:t}if(Array.isArray(e)){const a={};for(const i of e)a[i]=await this.get(i,void 0,r);return a}if(e===null){const i=await this.getStorageArea(r,"read").get(null);return this.mergeWithDefaults(i)}const s={};for(const a of Object.keys(e))s[a]=await this.get(a,e[a],r);return s}catch(s){throw console.error("[Comet Storage] Get operation failed:",s),new l("Failed to read from storage",s)}}async set(e,t=void 0,r="auto"){try{if(await this.initialize(),typeof e=="string")return await this.setRaw(e,t,r);const s=[];for(const[a,i]of Object.entries(e))s.push(await this.setRaw(a,i,r));return s.every(a=>a===!0)}catch(s){throw console.error("[Comet Storage] Set operation failed:",s),new l("Failed to write to storage",s)}}async remove(e,t="auto"){try{const r=this.getStorageArea(t,"write");return typeof e=="string"?await r.remove(e):await r.remove(e),!0}catch(r){throw console.error("[Comet Storage] Remove operation failed:",r),new l("Failed to remove from storage",r)}}async clear(e="both"){try{return e==="both"?await Promise.all([this.api.storage.sync.clear(),this.api.storage.local.clear()]):await this.getStorageArea(e,"write").clear(),!0}catch(t){throw console.error("[Comet Storage] Clear operation failed:",t),new l("Failed to clear storage",t)}}async has(e,t="auto"){try{return await this.get(e,void 0,t)!==void 0}catch{return!1}}async getUsage(e="both"){try{const t={};if(e==="both"||e==="sync"){const r=await this.api.storage.sync.getBytesInUse();t.sync={used:r,total:this.syncQuota,percentage:Math.round(r/this.syncQuota*100),available:this.syncQuota-r}}if(e==="both"||e==="local"){const r=await this.api.storage.local.getBytesInUse();t.local={used:r,total:this.localQuota,percentage:Math.round(r/this.localQuota*100),available:this.localQuota-r}}return t}catch(t){return console.error("[Comet Storage] Usage check failed:",t),{sync:{used:0,total:0,percentage:0,available:0}}}}onChange(e){const t=(r,s)=>{e(r,s)};return this.api.storage.onChanged.addListener(t),()=>{this.api.storage.onChanged.removeListener(t)}}async resetToDefaults(){try{return await this.clear(),await this.api.storage.local.remove("_defaultsInitialized"),await this.initializeDefaults(),console.log("[Comet Storage] Reset to defaults"),!0}catch(e){return console.error("[Comet Storage] Reset failed:",e),!1}}getDefaults(){return JSON.parse(JSON.stringify(this.defaults))}async getRaw(e,t="auto"){return(await this.getStorageArea(t,"read").get(e))[e]}async setRaw(e,t,r="auto"){const s={[e]:t},a=this.getStorageArea(r,"write",s);return this.validateDataSize(s,a),await a.set(s),!0}getDefaultByPath(e){return e.split(".").reduce((t,r)=>t?.[r],this.defaults)}mergeWithDefaults(e){const t=JSON.parse(JSON.stringify(this.defaults));for(const[r,s]of Object.entries(e))r!=="_defaultsInitialized"&&this.setByPath(t,r,s);return t}setByPath(e,t,r){const s=t.split("."),a=s.pop(),i=s.reduce((o,h)=>(h in o||(o[h]={}),o[h]),e);i[a]=r}getStorageArea(e,t,r=null){if(e==="sync")return this.api.storage.sync;if(e==="local")return this.api.storage.local;if(e==="auto"){if(t==="read")return this.api.storage.sync;if(r)return this.calculateDataSize(r)>this.syncItemQuota?this.api.storage.local:this.api.storage.sync}return this.api.storage.sync}calculateDataSize(e){try{return new Blob([JSON.stringify(e)]).size}catch{return JSON.stringify(e).length}}validateDataSize(e,t){const r=this.calculateDataSize(e);if(t===this.api.storage.sync){for(const[a,i]of Object.entries(e)){const o=this.calculateDataSize({[a]:i});if(o>this.syncItemQuota)throw new l(`Item "${a}" exceeds sync storage item limit (${o} > ${this.syncItemQuota} bytes)`)}if(r>this.syncQuota)throw new l(`Data exceeds sync storage quota (${r} > ${this.syncQuota} bytes)`)}else if(r>this.localQuota)throw new l(`Data exceeds local storage quota (${r} > ${this.localQuota} bytes)`)}}class l extends Error{constructor(e,t){super(e),this.name="CometStorageError",this.originalError=t}}const A=new M,T=(()=>{if(typeof browser<"u")return browser;if(typeof chrome<"u")return chrome;throw new Error("No browser extension API available")})();class I{constructor(){this.api=T,this.messageId=0,this.pendingMessages=new Map,this.messageTimeout=3e4,this.retryAttempts=3,this.retryDelay=1e3}async sendToBackground(e,t={}){try{const r=this.createMessage(e),s=t.timeout||this.messageTimeout,a=t.retries||this.retryAttempts;return await this.retryOperation(()=>this.sendRuntimeMessage(r,s),a,"background script")}catch(r){throw console.error("[Comet Messaging] Background message failed:",r),new f("Failed to communicate with background script",r)}}async sendToContent(e,t=null,r={}){try{const s=t||await this.getActiveTabId(),a=this.createMessage(e),i=r.timeout||this.messageTimeout,o=r.retries||this.retryAttempts;if(!s)throw new Error("No active tab found");return await this.retryOperation(()=>this.sendTabMessage(s,a,i),o,`content script (tab ${s})`)}catch(s){throw console.error("[Comet Messaging] Content script message failed:",s),new f("Failed to communicate with content script",s)}}async sendToTab(e,t,r={}){try{const s=this.createMessage(t),a=r.timeout||this.messageTimeout,i=r.retries||this.retryAttempts;return await this.retryOperation(()=>this.sendTabMessage(e,s,a),i,`tab ${e}`)}catch(s){throw console.error("[Comet Messaging] Tab message failed:",s),new f(`Failed to communicate with tab ${e}`,s)}}async broadcast(e,t={}){try{const r=await this.api.tabs.query({}),s=this.createMessage(e),a=[];for(const i of r)try{const o=await this.sendToTab(i.id,s,{...t,retries:1});a.push({tabId:i.id,url:i.url,success:!0,response:o})}catch(o){a.push({tabId:i.id,url:i.url,success:!1,error:o.message})}return a}catch(r){throw console.error("[Comet Messaging] Broadcast failed:",r),new f("Failed to broadcast message",r)}}onMessage(e){const t=(r,s,a)=>{try{const i=e(r,s);if(i instanceof Promise)return i.then(o=>a(o)).catch(o=>a({success:!1,error:o.message})),!0;i!==void 0&&a(i)}catch(i){console.error("[Comet Messaging] Message handler error:",i),a({success:!1,error:i.message})}};return this.api.runtime.onMessage.addListener(t),()=>{this.api.runtime.onMessage.removeListener(t)}}onMessageType(e,t){return this.onMessage((r,s)=>{if(r.type===e)return t(r.data,s)})}async getActiveTab(){try{const[e]=await this.api.tabs.query({active:!0,currentWindow:!0});return e||null}catch(e){return console.error("[Comet Messaging] Failed to get active tab:",e),null}}async getActiveTabId(){return(await this.getActiveTab())?.id||null}isTabSupported(e){const t=typeof e=="string"?e:e?.url;return t?!["chrome://","chrome-extension://","moz-extension://","about:","file://","ftp://","data:","blob:"].some(s=>t.startsWith(s)):!1}createMessage(e){return{id:++this.messageId,timestamp:Date.now(),...e}}async sendRuntimeMessage(e,t){return new Promise((r,s)=>{const a=setTimeout(()=>{s(new Error("Message timeout"))},t);this.api.runtime.sendMessage(e,i=>{if(clearTimeout(a),this.api.runtime.lastError){s(new Error(this.api.runtime.lastError.message));return}r(i||{success:!1,error:"No response"})})})}async sendTabMessage(e,t,r){return new Promise((s,a)=>{const i=setTimeout(()=>{a(new Error("Message timeout"))},r);this.api.tabs.sendMessage(e,t,o=>{if(clearTimeout(i),this.api.runtime.lastError){a(new Error(this.api.runtime.lastError.message));return}s(o||{success:!1,error:"No response"})})})}async retryOperation(e,t,r){let s;for(let a=0;a<=t;a++)try{return await e()}catch(i){if(s=i,a===t)break;const o=this.retryDelay*Math.pow(2,a);console.warn(`[Comet Messaging] Retry ${a+1}/${t} for ${r} after ${o}ms:`,i.message),await this.sleep(o)}throw s}sleep(e){return new Promise(t=>setTimeout(t,e))}setTimeout(e){this.messageTimeout=e}setRetryConfig(e,t){this.retryAttempts=e,this.retryDelay=t}}class f extends Error{constructor(e,t){super(e),this.name="CometMessagingError",this.originalError=t}}const C=new I;export{C as m,A as s};
//# sourceMappingURL=messaging-CQ-fz_cX.js.map
