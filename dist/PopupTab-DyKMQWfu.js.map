{"version":3,"file":"PopupTab-DyKMQWfu.js","sources":["../node_modules/lucide-react/dist/esm/icons/download.js","../src/features/website-screenshot/components/PopupTab.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.516.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 15V3\", key: \"m9g1x1\" }],\n  [\"path\", { d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\", key: \"ih7n3h\" }],\n  [\"path\", { d: \"m7 10 5 5 5-5\", key: \"brsn70\" }]\n];\nconst Download = createLucideIcon(\"download\", __iconNode);\n\nexport { __iconNode, Download as default };\n//# sourceMappingURL=download.js.map\n","/**\n * Website Screenshot Popup Tab - Direct Chrome API (No Service Worker)\n * @module @voilajsx/comet\n * @file src/features/website-screenshot/components/PopupTab.tsx\n */\n\nimport React, { useState } from 'react';\nimport { TabsContent } from '@voilajsx/uikit/tabs';\nimport { Card, CardContent, CardHeader, CardTitle } from '@voilajsx/uikit/card';\nimport { Button } from '@voilajsx/uikit/button';\nimport { Alert, AlertDescription } from '@voilajsx/uikit/alert';\nimport { Camera, Loader2, CheckCircle, AlertCircle, Download } from 'lucide-react';\nimport { messaging } from '@voilajsx/comet/messaging';\nimport { storage } from '@voilajsx/comet/storage';\n\nexport default function WebsiteScreenshotTab({ value, currentTab }) {\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [result, setResult] = useState(null);\n  const [screenshotData, setScreenshotData] = useState(null);\n  const [isEnabled, setIsEnabled] = useState(true);\n\n  const canCapture = messaging.isTabSupported(currentTab) && isEnabled;\n\n  // Load feature enabled state\n  React.useEffect(() => {\n    loadEnabledState();\n  }, []);\n\n  const loadEnabledState = async () => {\n    try {\n      const enabled = await storage.get('websiteScreenshot.enabled', true);\n      setIsEnabled(enabled);\n    } catch (error) {\n      console.error('[Screenshot] Failed to load enabled state:', error);\n    }\n  };\n\n  const handleTakeScreenshot = async () => {\n    if (!messaging.isTabSupported(currentTab)) {\n      setResult({ type: 'error', message: 'Screenshots not available on this page' });\n      return;\n    }\n\n    if (!isEnabled) {\n      setResult({ type: 'error', message: 'Screenshot feature is disabled' });\n      return;\n    }\n\n    setIsCapturing(true);\n    setResult(null);\n\n    try {\n      // Direct Chrome API call from popup\n      const dataUrl = await new Promise((resolve, reject) => {\n        chrome.tabs.captureVisibleTab(null, { format: 'png' }, (dataUrl) => {\n          if (chrome.runtime.lastError) {\n            reject(new Error(chrome.runtime.lastError.message));\n          } else {\n            resolve(dataUrl);\n          }\n        });\n      });\n\n      // Calculate file size\n      const base64Data = dataUrl.split(',')[1];\n      const sizeInBytes = Math.round((base64Data.length * 3) / 4);\n      \n      const data = {\n        dataUrl: dataUrl,\n        filename: `screenshot-${Date.now()}.png`,\n        size: sizeInBytes,\n        timestamp: Date.now()\n      };\n\n      setScreenshotData(data);\n      setResult({ type: 'success', message: 'Screenshot captured!' });\n\n    } catch (error) {\n      console.error('[Screenshot] Capture failed:', error);\n      setResult({ \n        type: 'error', \n        message: error.message || 'Could not take screenshot' \n      });\n    } finally {\n      setIsCapturing(false);\n    }\n  };\n\n  const handleDownload = () => {\n    if (!screenshotData?.dataUrl) return;\n    \n    try {\n      // Simple download using anchor tag\n      const link = document.createElement('a');\n      link.href = screenshotData.dataUrl;\n      link.download = screenshotData.filename || 'screenshot.png';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      setResult({ type: 'success', message: 'Download started!' });\n    } catch (error) {\n      setResult({ type: 'error', message: 'Download failed' });\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n  };\n\n  return (\n    <TabsContent value={value} className=\"mt-0\">\n      <Card className=\"bg-card border-border\">\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-base flex items-center gap-2\">\n            <Camera className=\"w-4 h-4\" />\n            Screenshot\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          \n          {/* Take Screenshot Button */}\n          <Button\n            onClick={handleTakeScreenshot}\n            disabled={isCapturing || !messaging.isTabSupported(currentTab) || !isEnabled}\n            className=\"w-full\"\n          >\n            {isCapturing ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Taking Screenshot...\n              </>\n            ) : (\n              <>\n                <Camera className=\"w-4 h-4 mr-2\" />\n                {!isEnabled ? 'Feature Disabled' : \n                 !messaging.isTabSupported(currentTab) ? 'Not Available' : \n                 'Take Screenshot'}\n              </>\n            )}\n          </Button>\n\n          {/* Status Message */}\n          {result && (\n            <Alert variant={result.type === 'error' ? 'destructive' : 'default'}>\n              {result.type === 'success' ? (\n                <CheckCircle className=\"h-4 w-4 text-green-500\" />\n              ) : (\n                <AlertCircle className=\"h-4 w-4\" />\n              )}\n              <AlertDescription>{result.message}</AlertDescription>\n            </Alert>\n          )}\n\n          {/* Screenshot Info & Download */}\n          {screenshotData && (\n            <div className=\"space-y-3\">\n              <div className=\"bg-muted/50 p-3 rounded text-center\">\n                <Camera className=\"w-6 h-6 mx-auto mb-2 text-muted-foreground\" />\n                <div className=\"text-sm font-medium\">Screenshot Ready</div>\n                <div className=\"text-xs text-muted-foreground\">\n                  {formatFileSize(screenshotData.size)} â€¢ PNG\n                </div>\n              </div>\n\n              <Button\n                onClick={handleDownload}\n                variant=\"outline\"\n                className=\"w-full\"\n              >\n                <Download className=\"w-4 h-4 mr-2\" />\n                Download Screenshot\n              </Button>\n            </div>\n          )}\n\n          {/* Not supported/disabled message */}\n          {(!messaging.isTabSupported(currentTab) || !isEnabled) && (\n            <div className=\"text-center text-sm text-muted-foreground py-2\">\n              <AlertCircle className=\"w-4 h-4 mx-auto mb-1\" />\n              {!isEnabled ? 'Screenshot feature disabled in settings' : \n               'Screenshots not available on extension pages'}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </TabsContent>\n  );\n}"],"names":["__iconNode","Download","createLucideIcon","WebsiteScreenshotTab","value","currentTab","isCapturing","setIsCapturing","useState","result","setResult","screenshotData","setScreenshotData","isEnabled","setIsEnabled","messaging","React","loadEnabledState","enabled","storage","error","handleTakeScreenshot","dataUrl","resolve","reject","base64Data","sizeInBytes","data","handleDownload","link","formatFileSize","bytes","k","sizes","jsx","TabsContent","jsxs","Card","CardHeader","CardTitle","Camera","CardContent","Button","Fragment","Loader2","Alert","CheckCircle","AlertCircle","AlertDescription"],"mappings":"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","x_google_ignoreList":[0]}