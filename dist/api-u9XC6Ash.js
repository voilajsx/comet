const c={async fetch(t,e={}){try{const r=await new Promise((s,o)=>{const a={type:"api.fetch",data:{url:t,method:e.method||"GET",headers:e.headers||{},body:e.body?typeof e.body=="string"?e.body:JSON.stringify(e.body):null,timeout:e.timeout||3e4}};chrome.runtime.sendMessage(a,n=>{chrome.runtime.lastError?o(new Error(chrome.runtime.lastError.message||"Unknown runtime error")):s(n)})});return{ok:r.success,status:r.status,json:()=>Promise.resolve(r.data),data:r.data,error:r.error}}catch(r){return{ok:!1,status:0,error:r instanceof Error?r.message:String(r),json:()=>Promise.reject(r)}}},async get(t,e={}){return this.fetch(t,{method:"GET",headers:e})},async post(t,e=null,r={}){return this.fetch(t,{method:"POST",body:e,headers:r})},async put(t,e=null,r={}){return this.fetch(t,{method:"PUT",body:e,headers:r})},async patch(t,e=null,r={}){return this.fetch(t,{method:"PATCH",body:e,headers:r})},async delete(t,e={}){return this.fetch(t,{method:"DELETE",headers:e})}};export{c};
//# sourceMappingURL=api-u9XC6Ash.js.map
